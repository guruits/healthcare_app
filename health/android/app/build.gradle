plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1')
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0')

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.health"
    compileSdk flutter.compileSdkVersion
    ndkVersion = "25.1.8937393"

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        doNotStrip '**/*.so'
    }
    aaptOptions {
        cruncherEnabled = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.health"
        minSdkVersion 23
        targetSdkVersion 34 // Adjust if needed
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
//        ndk {
//            abiFilters "armeabi-v7a", "arm64-v8a"
//        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

//configurations.all {
//    resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-stdlib:2.1.0'
//    resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.1.0'
//    resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.1.0'
//    resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-reflect:2.1.0'
//}


flutter {
    source '../..'
}

dependencies {
    implementation 'com.google.mlkit:face-detection:16.1.7'
    implementation platform('com.google.firebase:firebase-bom:33.11.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.android.play:integrity:1.2.0'
    implementation "androidx.biometric:biometric:1.1.0"
    implementation 'androidx.browser:browser:1.3.0'
    implementation 'com.google.android.play:feature-delivery:2.1.0'
    implementation 'com.google.android.play:core-common:2.0.0'
}

